---
- name: Create
  hosts: localhost
  connection: local
  gather_facts: false
  no_log: "{{ molecule_no_log }}"
  tasks:
    - name: Create docker network(s)
      community.docker.docker_network:
        name: "{{ item }}"
        state: present
      loop: "{{ molecule_yml.driver.networks | default([]) }}"
      when: molecule_yml.driver.networks is defined

    - name: Determine the CMD directives
      ansible.builtin.set_fact:
        molecule_docker_command: >-
          {{ item.command
             if item.command is defined
             else 'bash -c "while true; do sleep 10000; done"' }}
      with_items: "{{ molecule_yml.platforms }}"
      register: platforms
      when: item.registry is not defined

    - name: Create Dockerfiles from image names
      ansible.builtin.template:
        src: "{{ molecule_scenario_directory }}/Dockerfile.j2"
        dest: "{{ molecule_ephemeral_directory }}/Dockerfile_{{ item.image | regex_replace('[^a-zA-Z0-9_]', '_') }}"
        mode: "0600"
      loop: "{{ molecule_yml.platforms }}"
      when: not item.pre_build_image | default(false)

    - name: Create molecule instance(s)
      community.docker.docker_container:
        name: "{{ item.name }}"
        image: "{{ item.image }}"
        state: started
        recreate: false
        log_driver: json-file
        command: "{{ item.command | default('bash -c \"while true; do sleep 10000; done\"') }}"
        privileged: "{{ item.privileged | default(omit) }}"
        volumes: "{{ item.volumes | default(omit) }}"
        tmpfs: "{{ item.tmpfs | default(omit) }}"
        capabilities: "{{ item.capabilities | default(omit) }}"
        exposed_ports: "{{ item.exposed_ports | default(omit) }}"
        published_ports: "{{ item.published_ports | default(omit) }}"
        ulimits: "{{ item.ulimits | default(omit) }}"
        networks: "{{ item.networks | default(omit) }}"
        network_mode: "{{ item.network_mode | default(omit) }}"
        dns_servers: "{{ item.dns_servers | default(omit) }}"
        etc_hosts: "{{ item.etc_hosts | default(omit) }}"
        env: "{{ item.env | default(omit) }}"
        restart_policy: "{{ item.restart_policy | default(omit) }}"
        restart_retries: "{{ item.restart_retries | default(omit) }}"
        tty: "{{ item.tty | default(omit) }}"
        cgroupns_mode: "{{ item.cgroupns_mode | default(omit) }}"
      register: server
      loop: "{{ molecule_yml.platforms }}"
      async: 7200
      poll: 0

    - name: Wait for instance(s) creation to complete
      ansible.builtin.async_status:
        jid: "{{ item.ansible_job_id }}"
      register: docker_jobs
      until: docker_jobs.finished
      retries: 300
      delay: 2
      loop: "{{ server.results }}"
